//
//  main.cpp
//  AdventOfCode2022_day2
//
//  Created by Kjell-Olov HÃ¶gdal on 2022-12-02.
//

#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <sstream>
#include <algorithm>
#include <iterator>
#include <map>

extern char const* pTest;
extern char const* pData;

using Result = size_t;
using Answers = std::vector<std::pair<std::string,Result>>;

using Move = std::pair<char,char>;
using Model = std::vector<Move>;

std::ostream& operator<<(std::ostream& os,Move const& move) {
    os << "move: " << move.first << " " << move.second;
    return os;
}

using ScoreTable = std::map<Move,Result>;

const char ROCK{'A'};
const char PAPER{'B'};
const char SCISSORS{'C'};

Model parse(auto& in) {
    Model result{};
    std::string line{};
    char c1,c2;
    while (in >> c1 >> c2) {
        result.push_back({c1,c2});
    }
    return result;
}

namespace part1 {
    // The score for a single round is the score for the shape you selected (1 for Rock, 2 for Paper, and 3 for Scissors) plus the score for the outcome of the round (0 if you lost, 3 if the round was a draw, and 6 if you won)
    const ScoreTable SCORE_TABLE = {
        {{ROCK,'X'},1+3}
        ,{{ROCK,'Y'},2+6}
        ,{{ROCK,'Z'},3+0}
        ,{{PAPER,'X'},1+0}
        ,{{PAPER,'Y'},2+3}
        ,{{PAPER,'Z'},3+6}
        ,{{SCISSORS,'X'},1+6}
        ,{{SCISSORS,'Y'},2+0}
        ,{{SCISSORS,'Z'},3+3}
    };

    Result score(Move const& move) {
        Result result{};
        if (SCORE_TABLE.contains(move)) result = SCORE_TABLE.at(move);
        else std::cerr << "\nERROR: No mapping from " << move << " to a score";
        return result;
    }

  Result solve_for(char const* pData) {
      Result result{};
      std::stringstream in{ pData };
      auto data_model = parse(in);
      for (auto const& move : data_model) {
          std::cout << "\n" << move << " score:" << score(move);
          result += score(move);
      }
      return result;
  }
}

namespace part2 {

    const char LOOSE{'X'};
    const char DRAW{'Y'};
    const char WIN{'Z'};

    const ScoreTable SCORE_TABLE = {
        {{ROCK,ROCK},1+3}
        ,{{ROCK,PAPER},2+6}
        ,{{ROCK,SCISSORS},3+0}
        ,{{PAPER,ROCK},1+0}
        ,{{PAPER,PAPER},2+3}
        ,{{PAPER,SCISSORS},3+6}
        ,{{SCISSORS,ROCK},1+6}
        ,{{SCISSORS,PAPER},2+0}
        ,{{SCISSORS,SCISSORS},3+3}
    };

    char to_loose(char c1) {
        char result{' '};
        switch (c1) {
            case ROCK: result = SCISSORS; break;
            case PAPER: result = ROCK; break;
            case SCISSORS: result = PAPER; break;
        }
        return result;
    }

    char to_draw(char c1) {
        return c1;
    }

    char to_win(char c1) {
        char result{' '};
        switch (c1) {
            case ROCK: result = PAPER; break;
            case PAPER: result = SCISSORS; break;
            case SCISSORS: result = ROCK; break;
        }
        return result;
    }

    Move decoded_move(Move const& encoded_move) {
        Move result{encoded_move};
        switch (encoded_move.second) {
            case LOOSE: result.second = to_loose(encoded_move.first); break;
            case DRAW: result.second = to_draw(encoded_move.first);break;
            case WIN: result.second = to_win(encoded_move.first); break;
        }
        return result;
    }
    Result score(Move const& encoded_move) {
        Result result{};
        auto actual_move = decoded_move(encoded_move);
        if (SCORE_TABLE.contains(actual_move)) result = SCORE_TABLE.at(actual_move);
        else std::cerr << "\nERROR: No mapping from " << actual_move << " to a score";
        return result;
    }

  Result solve_for(char const* pData) {
      Result result{};
      std::stringstream in{ pData };
      auto data_model = parse(in);
      for (auto const& move : data_model) {
          std::cout << "\n" << move << " score:" << score(move);
          result += score(move);
      }
      return result;
  }
}

int main(int argc, char *argv[])
{
  Answers answers{};
  answers.push_back({"Part 1 Test",part1::solve_for(pTest)});
  answers.push_back({"Part 1     ",part1::solve_for(pData)});
  answers.push_back({"Part 2 Test",part2::solve_for(pTest)});
  answers.push_back({"Part 2     ",part2::solve_for(pData)});
  for (auto const& answer : answers) {
    std::cout << "\nanswer[" << answer.first << "] " << answer.second;
  }
  // std::cout << "\nPress <enter>...";
  // std::cin.get();
  std::cout << "\n";
  return 0;
}

char const* pTest = R"(A Y
B X
C Z)";
char const* pData = R"(A X
A Z
A Z
A X
A X
B X
C Y
B X
A Z
A X
A X
A X
A X
B X
A X
B X
A Z
A Z
A X
A X
A Z
A Z
A Z
A X
A Z
A X
C Y
C Z
A X
B X
A X
A X
A X
A Z
B X
A X
B X
C Y
A X
A Z
A Y
A X
A Z
A X
A Z
B X
A X
A Z
B X
A X
A Z
A X
A Z
A Z
A X
B X
B X
B X
B Z
A Z
B Z
A X
A X
A Z
A X
B Z
B Y
A Z
B X
A Y
B X
C X
B Z
B X
C Y
A Z
A X
A X
C Y
B X
A X
A Y
A X
A X
A Y
A Z
C Z
A Z
B X
B X
A X
B X
A X
A X
B Y
B X
A Z
B X
B X
A X
B Z
C Z
A Z
C Z
B X
B X
A Z
A X
A X
B X
A Z
B X
A Z
A X
A X
A X
B X
B X
B X
B X
A X
A Y
A X
B X
A Z
A X
A X
A X
C Y
A X
B X
A X
A Z
A X
B X
A Y
B X
C Z
A Y
A X
B Y
A X
B X
A X
A X
A X
B X
A X
A X
A Z
A Z
A X
C Y
B X
B X
A Z
B X
B Y
C Y
A X
A X
B Y
A X
B Y
B X
B X
A X
A Z
B X
B X
A Y
A X
C Y
C Y
C Y
A X
B X
A X
A X
A X
B X
B X
C Y
A X
A Z
A Z
A X
B X
A Z
A Z
A X
B X
A X
A Z
A X
C Z
B X
A X
C Y
C Y
A Z
B X
B Z
C Y
B X
A Y
B Y
A Z
A X
A X
B X
B Y
A Z
A X
B X
A X
C X
C Y
A X
B X
A Z
A X
B X
A X
C Y
C Y
C Y
A X
A X
A Z
A X
C Y
A Z
B Y
A X
C Y
B Z
B X
B X
A Z
B X
A Y
C X
A X
B X
A Z
C Y
A X
A Z
C Z
A X
C Y
B X
C Y
C Z
A Y
A Z
C Y
A X
A X
A X
A Y
B X
B X
C Y
C Y
A X
A Z
C Y
B Z
B X
C Z
B X
B X
C Z
A X
A X
B X
B X
A X
A X
B X
B X
B X
C Y
A X
A X
A X
A X
B X
A X
A X
B X
B Z
A X
B X
A X
C Y
B Y
A X
B X
A Y
B Z
B X
A X
B Z
B X
A Y
A X
B X
A X
A Z
B X
A X
A X
C Z
A X
B X
A X
B Y
A Z
A X
B X
A X
A Z
B X
B X
B Y
B X
A X
C Y
A X
A X
B X
B Y
A X
A X
A X
C Z
C Z
B Y
B X
B Z
A X
A Y
A X
C Y
B X
A X
A X
A X
A Z
C Y
A X
A X
C Y
A X
A X
A X
A Z
A Y
A X
A Y
C Z
A Z
A X
B X
A Z
C Z
C Y
A Z
A Z
C Y
C Z
C Z
A X
B X
B X
B Z
C Y
A X
A X
A X
A Z
A X
B X
B X
C X
A X
A X
B X
A Y
A X
A X
B Y
C Z
A X
A X
A Y
B X
B X
B X
C Z
A Z
A Y
B Y
A X
B X
B X
B X
B Z
A Y
B Y
A Z
A Z
C Z
B X
A X
A Y
A Y
C Y
B Y
A X
A X
A X
A X
B Y
A X
A Y
A X
A Z
B X
B X
A Y
A X
A Y
A Y
A Z
B X
B X
A Z
B X
A X
A Z
A Z
B X
A Z
A X
A Y
A Z
A X
A Z
B Y
A X
C Y
B X
C X
C Y
B Z
C Y
C Y
A X
A X
A Y
B X
C Z
B X
C Y
A X
A Z
C Y
A X
A Z
A Z
B Y
A X
A X
B X
B Y
A X
A X
B X
A X
B X
A X
B X
A X
B Y
A Z
B X
B X
B X
B X
A Y
A X
A Y
A Y
C Z
B Z
A X
B Y
A X
C Z
B X
A X
A X
A X
A X
A X
C Z
C Z
C Z
A X
C Y
A X
C X
C Z
A X
B X
A Z
A Z
A Z
A X
A Z
A Z
B Z
A X
B X
A Z
C Y
A X
A Z
A Z
A Z
B Z
B X
A X
B X
B X
B X
B X
B Y
B X
A X
A X
A Z
A Z
A Z
B Y
A X
A X
A Y
B X
B X
A Z
A X
B X
A X
A X
A Z
C Y
A X
B X
A X
B X
A X
B X
A Z
B X
A X
A Z
A Z
B X
A Y
A X
A Z
C Y
A X
A X
A X
B Y
B X
A Y
A Z
C X
B X
C Y
A X
B X
C Z
C Z
A X
B X
B X
B Y
B X
B X
A X
A Z
B Z
B X
A X
B X
B X
B X
A Z
A X
A X
A Z
B Y
B Z
A X
A Z
A Z
A Z
A X
A X
A X
A X
A X
A X
B X
A Z
B Z
A X
A Z
C Y
A Z
A X
A Y
A Y
B X
B Y
A Z
A X
B X
B Y
A X
B X
A X
B X
B X
C Y
A Z
B X
A X
B X
A X
A Z
A X
A Z
A X
A X
A X
B X
A Y
A X
A X
B X
C Z
B X
A X
C Y
A X
B X
A Z
B Y
B Z
A X
A X
A X
C Y
A X
A X
A X
B X
C Z
A Z
A X
C Z
B X
A Z
A Y
C Y
C Y
A Z
B X
C Z
C Z
A X
A X
A X
A X
A X
B X
C Y
A Z
A X
B X
A Z
A X
A Y
A X
B Z
A X
B X
A X
A X
A X
A Y
B X
C Y
A X
A Z
C Y
A Z
A X
A Y
A X
A Z
A X
A Y
C Y
A Y
A Z
A X
A X
A X
A Z
A X
B X
A Y
A X
B X
A X
A X
B X
A X
B X
C Z
B X
A Z
A Z
C Y
B Y
B X
A Y
B X
B X
A Y
A X
C X
C Y
B X
A X
C X
C Z
A X
A Z
B X
B Z
C Y
A X
C Y
A Y
B X
B Y
A X
C Y
A Z
A X
A X
C Y
C Y
A X
A Z
B X
A Y
B X
A Z
A Z
A Z
A Z
A X
C Z
B X
B Y
A X
A Y
A X
B X
C Y
C Z
B Z
B X
B Z
A X
A Z
C Y
A X
B Y
A X
A Z
A X
C Z
A X
A Y
B Y
A X
A X
A X
A Z
B X
B X
B X
A X
C Y
C X
C Y
C Z
A X
A X
A Z
A Z
A X
A X
A X
A X
A X
A X
A X
C Z
A X
B X
A Z
B X
B X
B X
A Y
A X
A X
B X
A X
B X
A Z
C Y
B Y
C Z
B Y
B X
B X
A X
C Z
A X
B Y
C Y
B Y
A Z
A Y
A X
A X
C Y
B X
B X
A Z
A X
C Y
C Y
A Y
A Z
B X
C Z
A Z
C Y
A X
A X
A Z
B X
A X
A X
A Z
B X
C Z
A X
A X
B X
B Y
A Z
A X
B X
A X
C Y
B X
B X
B Z
C Y
A X
B X
A X
A X
A Y
A Y
A Z
B X
A Z
B Y
B X
A X
B Y
A X
A X
A Z
A X
B X
A Z
A X
A Z
B X
B X
B X
B Z
C Y
A Y
A Y
A Z
A X
B X
B X
A X
A X
B Y
A X
B X
A Z
B Z
B X
C Y
A Z
A X
C Z
A Y
A Y
B X
A Y
C Z
A Z
A X
B X
A Z
C Y
C X
B X
B Z
A X
A Y
A X
B X
A X
A X
C Y
B Z
B Z
B Y
C Z
C Y
B X
B Y
C Y
A Z
B X
A X
A X
A X
A X
A X
A X
B X
B X
B X
A X
C Y
A X
A Y
A Z
B Y
C Y
A Z
A X
A X
A Z
A Y
B X
A Y
A X
A X
C Z
A X
A X
B X
A X
A Z
A Z
A X
A X
A X
B X
A X
A X
A X
A Z
A X
B X
B Z
C Y
A X
A Z
B X
B X
B X
A X
B X
A X
B X
A Y
B Y
C Y
A X
C Z
B Z
A Z
A X
A X
A Z
A Y
A Z
A X
A X
B X
A X
A X
A Z
C Z
B X
B Y
A Z
B X
A Z
A X
A X
A X
C Y
C Y
A Z
A X
A X
B Y
A Y
A X
B Z
B X
B Z
B X
B Y
B X
A Y
A Z
C Y
B X
A X
A X
B X
B Z
A X
C X
A X
A X
A X
A X
A X
A X
B X
A X
C Z
A Y
B X
B X
B Z
A X
B X
B Z
B X
A Z
A X
B X
A X
A Y
B X
A Z
C Z
B X
C Z
A X
A X
C Y
A Z
C Y
A Z
A X
B X
A X
C Y
A Z
A X
A X
B X
B X
A Z
B Y
B X
A X
A Z
A X
B X
A X
A Z
A Z
A Y
A Y
A X
C Z
A Z
A Z
A X
B X
A Y
B Z
A X
A Z
A X
C Z
B X
A Z
C Z
A X
C X
A Z
A X
A X
B Z
A X
B X
A X
B X
C Z
A X
B X
A Z
B X
C Y
B X
A Z
A X
A Y
C Z
A Z
B X
A Z
A Y
A Z
B X
A X
B X
C Y
B X
A X
C Y
A X
A X
B Y
A X
B Y
A X
A X
A X
B X
A X
A X
C Z
A X
B X
A Y
A Y
B Z
A Z
A Y
A X
B X
B Y
A Z
B Y
A X
A Z
A X
A Z
B X
A X
A X
B X
A Y
B X
B X
A X
A Z
B X
A Y
B X
A Z
B X
B X
B X
B X
A Y
A Z
B X
B Y
B X
C Y
C Y
C Y
B X
B X
A Y
A X
B X
B X
A X
B X
A X
A Z
A Z
A Z
B X
A X
A X
A Y
A X
A X
C Y
B X
C Y
A X
A Y
C Z
A X
B X
A Z
A X
A X
A Z
A X
B Z
A X
A Z
A X
C Y
A Y
C X
A X
C Y
B X
B X
A Z
A X
A X
A X
B X
A X
C Y
C Y
A Y
A X
C Z
A X
B X
B Y
A Z
A X
B X
B X
A X
A Z
C Y
B X
A Y
A X
A Z
B X
A X
A Z
B X
A Y
B Z
A Z
C Z
C Y
A Z
A X
A X
A Z
B X
A X
B X
A X
A X
B X
A Z
A X
C Z
B X
A Z
B Y
A Z
A X
A Z
B X
A X
A X
A Y
B X
C Z
B X
A X
A X
A Z
B X
C X
B X
B X
A Z
B Y
B X
A Z
C Y
A X
A X
B X
B X
A X
B X
A Z
A X
A X
A Z
A X
A X
B X
B X
A X
A Z
A Y
A X
A X
C Y
B X
A X
B X
C Z
A Z
B X
A X
A X
A X
C Y
A X
A X
A X
A Z
B Y
B X
A X
A X
A Z
B X
C Z
B X
A Z
A Z
A X
A Y
B Y
B X
A Z
A Z
A X
A Y
B X
A X
A Z
B X
A Y
A Z
A Z
B X
C Z
A X
A X
B X
B X
A X
A Y
A Y
C Z
B X
A X
A Z
C Y
B X
A Z
A X
B X
B Y
A X
B X
A Y
B X
A X
A Z
B X
B X
C Y
B X
B X
B Y
A X
A X
B X
B X
A X
B X
C Y
A X
A X
A Z
A Z
B X
A Y
B X
B Y
A X
A Z
A X
A Z
A X
B Y
B X
B X
A X
B X
A X
B X
B X
A X
B X
C X
A Z
A Z
A X
A X
A Z
A X
B X
A X
A X
A Z
A Z
A X
A X
B X
C Y
A Z
A X
A X
A Y
A X
B Z
C Z
A Z
B X
A X
B X
A X
B X
B X
A Y
B Y
A X
B X
B Y
C Y
B Z
B Y
B Y
A Z
A X
A Y
A X
A Z
A Z
A X
A X
A X
A X
A Y
C Y
A X
A Y
A Z
A Z
B X
A X
A X
A Z
B Y
B X
B X
A X
B Z
B Z
A Y
B X
A Y
A X
B X
C Z
A X
A Y
B X
A X
B Z
C Y
A Z
A X
A Z
A X
A X
A X
A X
C Y
B X
A X
A X
C Y
C Y
A Z
C Y
A Z
A Y
C X
B X
C Y
A Z
A X
B X
B Z
B X
B X
B X
B X
B X
A X
A Z
B X
A Y
A X
A Y
B X
A X
A X
A X
B Z
B Z
B X
B X
A Y
A X
B Y
B X
B Y
C Y
A X
A X
C Y
A X
B X
B X
B X
C Z
B X
A Z
B X
B X
A X
B Z
A Z
A Z
A X
A Z
A Y
A Z
B X
A X
B X
A X
A X
A X
B X
A X
B X
A X
A X
B X
A Z
A X
A Z
C Y
A X
B X
A X
A X
B X
B X
C Z
A X
A X
B X
A X
A Y
A X
A X
A Z
A X
A X
B X
A X
A X
A X
A Y
C Z
A Z
A Z
A X
B X
A Z
A X
A X
A X
C Y
C Y
A Z
C Y
B X
A X
B X
B X
A Z
A Z
A Y
B X
A Z
A X
A Z
A X
A X
A X
A Z
A Z
B X
A X
A X
B X
B X
A Z
B X
A X
A X
B X
B X
B X
A X
A X
A Z
A X
A X
B Y
B Y
C Y
A Y
A Y
B X
B X
C Y
A X
B X
A X
A X
A Z
A Y
A X
B X
A X
B X
A X
A Z
A X
C Y
B X
B X
A X
B X
A X
A X
A Z
C Y
B X
B X
A X
A X
A Z
A Z
B Y
A X
B X
A Y
C Z
B X
A X
A Z
B Y
A Z
B X
B X
B X
A X
A Z
A Z
B Y
A Y
B X
B Y
A Y
A Z
A X
A X
B X
B X
A Y
B X
A X
A X
C Y
B X
A X
C X
C Z
A X
A X
C Y
C Z
A Z
A X
C Y
C Y
C Y
A X
A Y
A Z
A X
C Z
A X
C X
B X
B Y
B Z
A X
A X
A X
A Z
B X
B X
C X
A X
C Z
C Y
A X
A X
B X
B X
A X
A X
A X
A Z
A Z
B X
A Z
B Y
A Y
A Y
A Z
B X
A Y
A X
A X
B X
A Z
B X
A Y
A X
B X
A X
B X
A X
B X
B Z
A Z
A Y
A Z
A X
B X
B X
C Y
B X
A X
B X
A Y
B X
B X
C Y
B X
A Z
A Z
C Y
A X
B X
B X
A X
B X
A Z
A X
A X
A Z
A Z
C Z
A X
A X
A X
A X
A X
A X
A Z
C Y
A X
C Y
A X
B X
C Y
B X
A Y
B X
B X
B X
A X
A X
A X
C Y
A Z
A Z
B X
A X
A Z
B X
B X
A X
A X
B Z
A X
B Z
B X
A X
A X
A X
B X
A X
C Y
A Y
A X
A X
B X
A Y
A X
C Y
C Y
B X
B X
A X
A X
C Y
B Y
C Y
A X
B X
A Y
B Z
B X
B X
A Y
B X
A Z
C Y
B X
B X
B Y
A X
A X
A X
C Y
B X
A Y
B X
A Z
B Y
A X
A X
A X
A X
A X
A X
B X
C Z
B X
B X
A X
A X
C Y
A X
A X
A X
A X
B Z
B X
A Z
B Z
C Z
C Y
B X
B X
C Z
A Z
A Y
A Z
A Y
C Z
A X
A X
A Z
A X
A Z
A X
B Z
B X
B X
C Z
B X
C Y
C Y
B X
A X
A X
A X
B Y
A X
C Y
B Y
C Y
B Y
A Z
B X
A X
A Z
B X
B Z
A Z
A X
A X
A Y
A X
A X
A Z
B X
B X
B X
B X
B X
A X
A X
A X
A Z
A Z
A Y
A X
A Z
A Z
B X
A X
B X
B X
A Z
B Y
A X
A X
A X
A X
B X
A Y
A X
C X
A Z
A X
C Z
C Y
B X
A Z
A Z
B X
C Y
A X
A Z
A X
B Y
C Y
A X
A X
A Z
A X
C Y
A Z
A X
A X
A X
C Y
B X
A X
B Y
A Z
A X
A Z
B X
A Z
A Z
A X
A X
C Z
B X
A Z
A X
B Z
A Z
A Z
B X
A X
A Z
A Y
A X
A Z
A Z
C X
C Z
B X
B X
A Z
A X
B X
A X
A X
A X
A Z
B X
A Z
A X
B X
A X
A X
C Z
B X
C Y
A X
B X
A Z
A Z
A X
B Z
B X
A Z
A Z
A X
C Y
A X
B X
C Y
B X
B X
A Z
B X
A Z
C Y
B X
A Y
B X
A Z
B Z
A Z
B X
A X
B Z
A X
A Y
B Z
C Y
C Y
B X
A X
A X
A X
A X
B Z
A X
A X
A X
C Y
C X
B Y
B X
B X
B X
A Y
A X
A Z
A X
B X
A Z
C Y
A X
A Z
A Z
A X
A X
A X
A X
A Z
A X
A X
B X
C Z
B X
C Z
B Y
B X
A Z
A Z
A Z
B Y
A Y
A Z
B X
C Y
A X
B X
A Z
C Y
A Y
B X
A X
A Y
A X
A Z
B X
A Z
B Y
B X
A X
B X
A X
A X
A X
A Y
B X
A Y
A X
B X
A X
A X
C Y
A X
A X
B Z
A Z
A Z
A X
C Y
B X
B X
C Y
A Z
C Y
A X
A X
B X
B X
A X
A Z
B Y
B X
A Z
B X
A X
B X
A Z
C Y
A X
B X
A X
A X
A Z
A X
B X
C Z
A X
A X
A Y
B X
A Z
B X
B X
B Y
A X
A Z
A X
A Z
B X
B X
A X
A X
B Z
A X
C Y
B X
A X
A Z
A Z
B X
C Y
C Y
B Y
A Z
C Z
A X
B X
A X
A X
B Y
B X
A X
A X
A Y
A Z
B X
A X
A X
A Z
A X
A X
B X
B X
A Y
A X
B X
A Z
B Z
B X
A Z
A X
A Z
B X
C Y
A X
A X
B X
A Z
B X
A Z
C Z
A Z
A X
C Y
A X
B X
B Z
A X
B X
C X
A X
B Y
A X
A X
C Y
A X
B Y
A X
A X
A X
B X
A X
B X
A Z
C Y
A X
C Z
A X
B X
A Z
A X
C Z
C Z
A X
A Y
A Z
A X
B X
B X
A Z
B X
A X
B X
B Y
B X
B X
C Z
A Y
A X
A Z
B Z
A X
A Z
A Z
A Y
B X
A Y
A X
A X
B X
A Z
B Z
A X
A Z
A Z
A Z
C Y
A X
B Z
B X
A Z
B X
A Z
A Y
A X
C Z
C X
A Y
A X
A Z
A X
A X
A Z
A Y
A Z
A Y
A X
C Y
B X
A Z
A X
A X
C Y
A X
A X
B Z
A Z
C Y
A X
A X
A X
B X
C Y
A X
A Y
B X
A X
A X
B Y
A Z
A X
A X
B X
A Z
A Y
C Y
C Z
C Y
A X
C Y
C Y
A X
A Y
C Y
B X
A X
B X
A X
A X
B X
A X
A Z
C Y
C Y
B X
A X
B X
C Z
C Y
B X
A X
A X
A Y
A X
A Y
A Z
B X
A Z
A Z
A X
A X
B X
C Y
B X
A Z
A X
A X
A X
B X
B Z
B X
B X
B X
A Z
A X
B Z
A X
B Z
A X
B Y
C Z
B Y
C Z
B Y
B X
A X
A X
C Y
B X
B X
A X
B Z
A Z
A Z
A X
A X
A X
B X
B X
B X
C Y
A X
B X
B X
B Z
B X
A Z
C Y
A X
C Z
A Z)";
